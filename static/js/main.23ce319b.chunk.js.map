{"version":3,"sources":["index.js"],"names":["App","props","state","input","handleChange","bind","event","this","setState","target","value","className","id","onChange","dangerouslySetInnerHTML","__html","marked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qNAgDMA,G,wDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAO,CAERC,MAhDM,+2BAqDV,EAAKC,aAAa,EAAKA,aAAaC,KAAlB,gBATH,E,yDAaNC,GACTC,KAAKC,SAAS,CAACL,MAAMG,EAAMG,OAAOC,U,+BAKtC,OAAQ,yBAAKC,UAAU,aACf,8BAAUC,GAAG,SAASD,UAAU,OAAOD,MAAOH,KAAKL,MAAMC,MAAOU,SAAUN,KAAKH,eAC/E,yBAAKQ,GAAG,UAAUD,UAAU,OAAOG,wBAA2B,CAAEC,OAAQC,IAAOT,KAAKL,MAAMC,e,GAtBpFc,IAAMC,YA2BxBC,IAASC,OAAO,kBAACpB,EAAD,MAAOqB,SAASC,eAAe,U","file":"static/js/main.23ce319b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport marked from 'marked';\nimport '../src/index.css'\n\nconst defaultInput = `\n# Markdown Previewer\n\n            \n\n## Use the left text area to write in Markdown\n            \n\n#### This is an \\`inline code\\` written within h4 text\n\n\\`\\`\\`\nThis is \na block \nof code\n\n\\`\\`\\`\n\n### The list :\n\n+ listItem1\n+ listItem2\n\n\n\nBlock quote:\n\n\n> this is supposed to be a block quote !\n\n\n\n**Visit the challenge in link below:**\n\n\n            \n[Challenge Link](https://www.freecodecamp.org/learn/front-end-libraries/front-end-libraries-projects/build-a-markdown-previewer)\n\n\nand the image:\n\n\n![Minion](https://res.cloudinary.com/teepublic/image/private/s--HAkw1SOt--/c_crop,x_10,y_10/c_fit,h_646/c_crop,g_north_west,h_734,w_1004,x_-108,y_-44/l_upload:v1466701074:production:blanks:ibu6swrzxdis4kiazjnn/fl_layer_apply,g_north_west,x_-239,y_-297/b_rgb:191919/c_limit,f_jpg,h_630,q_90,w_630/v1483940446/production/designs/1076631_1.jpg) `\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            \n            input:defaultInput\n\n\n        }\n\n        this.handleChange=this.handleChange.bind(this);\n    }\n    \n\n    handleChange(event){\n        this.setState({input:event.target.value})\n\n    }\n\n    render() {\n    return( <div className=\"container\">\n            <textarea id=\"editor\" className=\"item\" value={this.state.input} onChange={this.handleChange}></textarea>\n            <div id=\"preview\" className=\"item\" dangerouslySetInnerHTML = {{ __html: marked(this.state.input) }}></div> \n\n        </div>)\n}\n}\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}